name: CI New Branch
run-name: CI-New-Branch

# This is the CI New Branch Workflow.
# The purpose of this workflow is to automate the process of integrating (CI) code changes
# that are made on new branches or on pull requests targeting the 'main' branch which we use for development.
#
# The workflow is triggered in two scenarios:
# 1. When a new branch is created. This is triggered by the 'create' event.
# 2. When a pull request is opened that targets the 'develop' branch. This is triggered by the 'pull_request' event with the 'opened' type.
#
# The workflow consists of a single job: 'CI'.
#
# The 'CI' job:
# - Is defined in the separate '.github/workflows/ci.yml' file.
# - Runs every time the workflow is triggered, regardless of the specific event.
# - Represents the 'Continuous Integration' part of the workflow, where the code changes are built and tested.
#
# This setup ensures that code changes are always integrated and tested (CI) when they're made on a new branch or included in a pull request targeting 'develop'.

on:

  create:

  pull_request:
    branches: [ "main" ]

    types:
      - opened

jobs:
  CI:
    uses: ./.github/workflows/ci.yml # reusable workflow file path

  #TODO: add merging into staging here on successful CI run and is a PR from develop
  # if pull request is closed and merged = true
  merge-to-staging:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: Merge main into staging
        run: |
          git config user.name "theGaryLarson"
          git config user.email "gary.larson@seattlecolleges.edu"
          git fetch origin main
          git checkout staging
          git merge origin/main --no-edit

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: staging